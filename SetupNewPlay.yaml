---
- name: Deploy Application on Local Machine
  hosts: localhost  # Changed from 'local' to 'localhost'
  become: yes  # Use sudo if necessary
  tasks:
    - name: Update and upgrade the system
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"  # Add conditional for Debian-based systems

    - name: Install required packages
      apt:
        name:
          - openjdk-21-jdk
          - maven
          - git
          - cups
          - nginx
        state: present
      when: ansible_os_family == "Debian"

    - name: Add NodeSource repository
      get_url:
        url: https://deb.nodesource.com/setup_20.x
        dest: /tmp/nodesource_setup.sh
        mode: '0755'
      when: ansible_os_family == "Debian"

    - name: Run NodeSource setup script
      command: /tmp/nodesource_setup.sh
      args:
        creates: /etc/apt/sources.list.d/nodesource.list
      when: ansible_os_family == "Debian"

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Clone application repository
      git:
        repo: https://github.com/Akachi-Anabanti/web_printer.git
        dest: /home/vagrant/web_printer
        version: main
      become_user: vagrant

    - name: Build the backend
      command: mvn clean install
      args:
        chdir: /home/vagrant/web_printer/printer-management
      become_user: vagrant

    - name: Build the frontend
      command: npm install && npm run build
      args:
        chdir: /home/vagrant/web_printer/printer-management-frontend
      become_user: vagrant

 - name: Configure Nginx
  copy:
      dest: /etc/nginx/sites-available/myapp
      content: |
          server {
              listen 80;
              server_name localhost;
              location / {
                  root /home/vagrant/web_printer/printer-management-frontend/build;
                  index index.html index.htm;
                  try_files $uri $uri/ /index.html;
              }
              location /api {
                  proxy_pass http://localhost:8080;  # Adjust this if needed
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      notify: Restart Nginx

    - name: Enable Nginx configuration
      file:
        src: /etc/nginx/sites-available/myapp
        dest: /etc/nginx/sites-enabled/myapp
        state: link
      notify: Restart Nginx

  - name: Create startup script
      copy:
        dest: /home/vagrant/start_app.sh
        content: |
          #!/bin/bash
          cd /home/vagrant/web_printer/printer-management
          nohup mvn spring-boot:run > /dev/null 2>&1 &
          cd /home/vagrant/web_printer/printer-management-frontend
          nohup npm start > /dev/null 2>&1 &
      mode: '0755'

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
