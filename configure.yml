- name: Configure Nginx Services
  hosts: localhost
  vars:
    backend_dir: "{{ ansible_env.HOME }}/web_printer/printer-management"
    frontend_dir: "{{ ansible_env.HOME }}/web_printer/printer-management-frontend"
    release_path: "/var/www/web_printer/current"

  tasks:
    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/printerapp
        content: |
          upstream spring_app {
                      server localhost:8080;
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name printerapp.local;
              location / {
                  alias {{ release_path }}/;
                  index index.html index.htm;
                  try_files $uri $uri/ /index.html;
              }
              location /api {
                  proxy_pass http://spring_app;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      notify: Restart Nginx
      become: yes

    - name: Set Nginx permissions
      command: chown -R www-data:www-data {{ release_path }}
      become: yes

    - name: Enable Nginx configuration
      file:
        src: /etc/nginx/sites-available/printerapp
        dest: /etc/nginx/sites-enabled/printerapp
        state: link
      notify: Restart Nginx
      become: yes
      
    - name: Create systemd service for Spring Boot application
      copy:
        dest: /etc/systemd/system/printerapp.service
        content: |
          [Unit]
          Description=Printer sharing Spring Boot application
          After=network.target
          [Service]
          User={{ ansible_user_id }}
          WorkingDirectory={{ backend_dir }}
          ExecStart=/usr/bin/mvn spring-boot:run
          SuccessExitStatus=143
          TimeoutStopSec=10
          Restart=always
          RestartSec=5
          [Install]
          WantedBy=multi-user.target
      notify: Start Spring Boot Service
      become: yes
    
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
      become: yes
    
    - name: Enable and start Spring Boot service
      systemd:
        name: printerapp
        enabled: yes
        state: started
      become: yes

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Start Spring Boot Service
      systemd:
        name: printerapp
        state: started
