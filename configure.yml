- name: Configure Services
  hosts: localhost
  vars:
    backend_dir: "{{ ansible_env.HOME }}/web_printer/printer-management"
    frontend_dir: "{{ ansible_env.HOME }}/web_printer/printer-management-frontend"
    release_path: "/var/www/web_printer/current"

  tasks:
    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/printerapp
        content: |
          upstream spring_app {
                      server localhost:8080;
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name printerapp.local;
              location / {
                  alias {{ release_path }}/;
                  index index.html index.htm;
                  try_files $uri $uri/ /index.html;
              }
              location /api {
                  proxy_pass http://spring_app;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      notify: Restart Nginx
      become: yes

    - name: Set Nginx permissions
      command: chown -R www-data:www-data {{ release_path }}
      become: yes

    - name: Enable Nginx configuration
      file:
        src: /etc/nginx/sites-available/printerapp
        dest: /etc/nginx/sites-enabled/printerapp
        state: link
      notify: Restart Nginx
      become: yes
      
    - name: Create systemd service for Spring Boot application
      copy:
        dest: /etc/systemd/system/printerapp.service
        content: |
          [Unit]
          Description=Printer sharing Spring Boot application
          After=network.target
          [Service]
          User={{ ansible_user_id }}
          WorkingDirectory={{ backend_dir }}
          ExecStart=/usr/bin/mvn spring-boot:run
          SuccessExitStatus=143
          TimeoutStopSec=10
          Restart=always
          RestartSec=5
          [Install]
          WantedBy=multi-user.target
      notify: Start Spring Boot Service
      become: yes
    
    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes
      become: yes
    
    - name: Enable and start Spring Boot service
      systemd:
        name: printerapp
        enabled: yes
        state: started
      become: yes

    - name: Install loki and promtail packages
      apt:
        name:
          - loki
          - promtail
        state: present
      when: ansible_os_family == "Debian"

    - name: Create Loki config
      copy:
        dest: /etc/loki/loki.yaml
        content: |
          auth_enabled: false
          server:
            http_listen_port: 3100
          ingester:
            lifecycler:
              address: 127.0.0.1
              ring:
                kvstore:
                  store: inmemory
              final_sleep: 0s
            chunk_idle_period: 5m
            chunk_retain_period: 30s
          schema_config:
            configs:
              - from: 2020-05-15
                store: boltdb
                object_store: filesystem
                schema: v11
                index:
                  prefix: index_
                  period: 168h
          storage_config:
            boltdb:
              directory: /tmp/loki/index
            filesystem:
              directory: /tmp/loki/chunks
          limits_config:
            enforce_metric_name: false
            reject_old_samples: true
            reject_old_samples_max_age: 168h
          chunk_store_config:
            max_look_back_period: 0s
          table_manager:
            retention_deletes_enabled: false
            retention_period: 0s
      become: yes

    # - name: Create systemd service for Loki
    #   copy:
    #     dest: /etc/systemd/system/loki.service
    #     content: |
    #       [Unit]
    #       Description=Loki service
    #       After=network.target

    #       [Service]
    #       Type=simple
    #       ExecStart=/usr/local/bin/loki -config.file /etc/loki/loki.yaml

    #       [Install]
    #       WantedBy=multi-user.target
    #   become: yes
      
    # - name: Reload systemd daemon
    #   systemd:
    #     daemon_reload: yes
    #   become: yes
      
    - name: Enable and start Loki service
      systemd:
        name: loki
        enabled: yes
        state: started
      become: yes

    - name: Create Promtail config
      copy:
        dest: /etc/loki/promtail.yaml
        content: |
          server:
            http_listen_port: 9080
            grpc_listen_port: 0

          positions:
            filename: /tmp/positions.yaml

          clients:
            - url: http://localhost:3100/loki/api/v1/push

          scrape_configs:
            - job_name: system
              static_configs:
                - targets:
                    - localhost
                  labels:
                    job: varlogs
                    __path__: /var/log/*log
            - job_name: spring_boot
              static_configs:
                - targets:
                    - localhost
                  labels:
                    job: spring_boot
                    __path__: {{ backend_dir }}logs/*.log
      become: yes

    # - name: Create systemd service for Promtail
    #   copy:
    #     dest: /etc/systemd/system/promtail.service
    #     content: |
    #       [Unit]
    #       Description=Promtail service
    #       After=network.target

    #       [Service]
    #       Type=simple
    #       ExecStart=/usr/local/bin/promtail -config.file /etc/promtail/promtail.yaml

    #       [Install]
    #       WantedBy=multi-user.target
    #   become: yes
      
    # - name: Reload systemd daemon
    #   systemd:
    #     daemon_reload: yes
    #   become: yes
      
    - name: Enable and start Promtail service
      systemd:
        name: promtail
        enabled: yes
        state: started
      become: yes

  handlers:
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Start Spring Boot Service
      systemd:
        name: printerapp
        state: started
